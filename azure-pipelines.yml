# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

variables:
  imageName: 'docker-registry.grenzebach.com/dotnet-core-api:$(build.buildId)'

# include template repo
resources:
  repositories:
    - repository: templates
      type: github
      name: schmidtjohannes/azure-devops-build-templates
      endpoint: schmidtjohannes

jobs:
- template: docker.yml@templates  # Template reference
  parameters:
    imageName: $(imageName)



#steps:
#- bash: |
#    mkdir -p /etc/docker/certs.d/104.214.239.25:443
#    echo -n | openssl s_client -connect 104.214.239.25:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /etc/docker/certs.d/104.214.239.25:443/registry.crt
# some comment
#- script: |
#    docker build -f Dockerfile -t $(imageName) .
#    docker login -u $(dockerId) -p $(pswd) 104.214.239.25:443
#    docker push $(imageName)

#- task: Docker@1
#  displayName: Build image
#  inputs:
#    command: build
#    containerregistrytype: Container Registry
#    dockerRegistryEndpoint: docker-registry-grenzebach
#    dockerFile: Dockerfile
#    imageName: $(imageName)

#- task: Docker@1
#  displayName: Container registry login
#  inputs:
#    containerregistrytype: Container Registry
#    dockerRegistryEndpoint: docker-registry-grenzebach
#    command: login

#- task: Docker@1
#  displayName: Push image
#  inputs:
#    command: push
#    containerregistrytype: Container Registry
#    dockerRegistryEndpoint: docker-registry-grenzebach
#    imageName: $(imageName)
